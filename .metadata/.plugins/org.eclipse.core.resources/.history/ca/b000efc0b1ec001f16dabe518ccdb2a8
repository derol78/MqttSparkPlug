package org.sample.mavensample;

import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;
import org.eclipse.tahu.SparkplugMessage;
import org.eclipse.tahu.SparkplugTopic;
import org.eclipse.tahu.SparkplugTopicPayload;

public class SparkplugMqttPublisher {

    public static void main(String[] args) {
        String broker = "tcp://broker.hivemq.com:1883"; // Change to your MQTT broker URL
        String clientId = "SparkplugJavaPublisher";
        String topic = "spBv1.0/myGroup/NBIRTH/myNode"; // Change to your Sparkplug topic

        try {
            // Create an MQTT client
            MqttClient mqttClient = new MqttClient(broker, clientId);

            // Connect to the MQTT broker
            mqttClient.connect();

            // Create a Sparkplug message payload
            SparkplugTopicPayload payload = new SparkplugTopicPayload();
            payload.setTimestamp(System.currentTimeMillis());
            payload.addMetric("temperature", 22.5);

            // Create a Sparkplug message
            SparkplugMessage sparkplugMessage = new SparkplugMessage();
            sparkplugMessage.setPayload(payload);

            // Convert the Sparkplug message to a byte array
            byte[] payloadBytes = sparkplugMessage.toByteArray();

            // Create an MQTT message with the Sparkplug payload
            MqttMessage mqttMessage = new MqttMessage(payloadBytes);

            // Publish the message to the Sparkplug topic
            mqttClient.publish(topic, mqttMessage);

            // Disconnect from the MQTT broker
            mqttClient.disconnect();

            System.out.println("Message published to topic: " + topic);

        } catch (MqttException e) {
            e.printStackTrace();
        }
    }
}

